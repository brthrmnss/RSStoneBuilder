<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"  
				
				autoDrawBackground="false">
	
	
	<fx:Script> 
		<![CDATA[ 
			import org.syncon.RosettaStone.model.CustomEvent;
			import org.syncon.RosettaStone.vo.SearchVO;
			static public const MOVE_UP : String = 'MOVE_UP.f'; 
			static public const MOVE_DOWN : String = 'MOVE_DOWN.f' ; 
			static public const DELETE : String = 'DELETE.f'; //export before delete 
			static public const CHANGED_FILTER_FROM_RENDERER : String = 'CHANGED_FILTER';
			static public const PLAY : String = 'playSound..';
			 
			[Bindable] public var filter :    SearchVO = new SearchVO()
			override public function set data(value:Object):void { 
				super.data = value; 
				
				filter = value as SearchVO
				
				this.updateItemRenderer()
			} 
			
			
			public function updateItemRenderer(e:Event=null)  : void
			{
				txtLbl.text = this.filter.name.toString()
			}
			
			
			protected function onDelete():void
			{
				this.dispatchEvent( new CustomEvent( DELETE, this.filter ) ) ; 
			}			
			
			
			protected function onPlay(event:MouseEvent):void
			{
				this.dispatchEvent( new CustomEvent( PLAY, this.filter.url ) ) ; 
			}
			
		]]> 
	</fx:Script> 
	
	<fx:Declarations>
		<s:Sine id="sineIn" easeInFraction="0.3" />
	</fx:Declarations>	
	<!--	<s:layout>
	<s:HorizontalLayout gap="3"/>
	</s:layout>-->
	<s:states> 
		<s:State name="normal"/> 
		<s:State name="hovered"/> 
		<s:State name="disabled"/> 
		<s:State name="selected"/> 
	</s:states> 
	<!--	
	<s:transitions>
	
	<s:Transition toState="*" >
	<s:Fade targets="{[this.bgRect]}"   easer="{sineIn}"
	duration="350" />
	</s:Transition>
	
	
	<s:Transition toState="*" >
	<s:AnimateColor targets="{[this.txtLbl, this.lblCount ]}"   easer="{this.sineIn}"
	duration="350" />
	</s:Transition>		
	
	</s:transitions>		-->
	
	<!--<s:Rect id="bgRect"  width="100%" height="100%"  alpha.normal="0" >
		<s:fill>
			<s:SolidColor color="0x598E52"  color.hovered="0x598E52"  color.selected="0x36722E"/>
		</s:fill>
	</s:Rect>-->
	
	<s:VGroup verticalAlign="middle" verticalCenter="0" paddingLeft="5" paddingRight="5">
		<!--<s:Label id="seperator" text="|" color="0x6E6E6E"  />-->
		<s:Label id="txtLbl" color="0"    verticalCenter="0"  
				 useHandCursor.hovered="true"  
				 buttonMode.hovered="true" x="5"
				 fontSize="18" />
		
	</s:VGroup>
</s:ItemRenderer>
