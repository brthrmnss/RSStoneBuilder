<?xml version="1.0" encoding="utf-8"?>
<controls:ScreenView xmlns:mx="http://www.adobe.com/2006/mxml"
					 xmlns:controls="openplug.elips.controls.*"
					 xmlns:alarm="org.syncon.TalkingClock.view.mobile.alarm.*"
					 xmlns:screenClasses="openplug.elips.controls.screenClasses.*"
					 xmlns:view="org.syncon.TalkingClock.view.mobile.view.*"
					 xmlns:view1="mvc.view.*"
					 creationComplete="onInit(event)" xmlns:ellips="org.syncon.RosettaStone.view.ellips.*">
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.syncon.RosettaStone.model.CustomEvent;
			import org.syncon.RosettaStone.vo.ThemeVO;
			import org.syncon.TalkingClock.model.NightStandConstants;
			
			import outside.PlatformGlobals;
			
			static public const TRY_AGAIN : String = 'tryAgain' ; 
			static public const SETTINGS : String = 'settings'
			static public const GO_BACK : String = 'goBack'; 
			static public const LIST_CHANGED : String = 'listChanged'; 	
			static public const RESUME : String = 'RESUME'; 
			static public const INFO : String = 'INFO'; 
			static public const HOME : String = 'HOME'; 
			
			
			protected function onInit(event:FlexEvent):void
			{
				NightStandConstants.PlatformGlobals.fxMediate( this  ) ; 
				NightStandConstants.PlatformGlobals.addPlatformListClickEvent( this.list, this.list1_itemClickHandler )  
				NightStandConstants.PlatformGlobals.addPlatformClickEvent( this.btnResume, this.onResume ) ; 
			}
			override public function set visible( b : Boolean ) : void{
				super.visible = b; 
			}
			protected function list1_itemClickHandler(event: Event):void
			{
				var data : Object = NightStandConstants.PlatformGlobals.getItemClickEventData( event ) 
				this.dispatchEvent( new CustomEvent(LIST_CHANGED, data  )  ) 
			}
			
			public function onBack() : void
			{
				this.dispatchEvent( new Event( GO_BACK ) ) ; 
			}
			
			public function onTryAgain() : void
			{
				this.dispatchEvent( new Event( TRY_AGAIN ) ) ; 
			}
			
			protected function view1_activateHandler(event:Event):void
			{
				// TODO Auto-generated method stub
				
			}
			
			
			protected function onSettings():void
			{
				this.dispatchEvent( new Event( SETTINGS ) ) ; 
			}
			
			protected function onInfo():void
			{
				this.dispatchEvent( new Event( INFO ) ) ; 
			}
			protected function onResume(event:Event):void
			{
				this.dispatchEvent( new Event( RESUME ) ) ; 
			}
			
			protected function onHome(event:Event=null):void
			{
				this.dispatchEvent( new Event( HOME ) ) ; 
			}
			
		]]>
	</mx:Script>
	
	<!--<views:navigationContent>
	<s:Button label="Back" click="this.onBack()"/>
	</views:navigationContent>-->
	<!--<s:Image source="assets/1366x768.jpg" />-->
	<!-- <views:actionContent>
	<s:Button label="S" click="onSettings()" />
	</views:actionContent>-->
	
	<!--<s:HGroup  right="10" top="10" >
	<s:Button  icon="assets/buttons/lightbulb.png"  click="onInfo()" />
	<s:Button  icon="assets/buttons/preferences.png"  click="onSettings()"  right="10" top="10"/>
	</s:HGroup>-->
	
	<!--<s:List id="list" top="80" bottom="160" change="listChangeHandler(event)"
	borderVisible="false" horizontalCenter="0" width="100%"
	itemRenderer="org.syncon.RosettaStone.view.mobile.itemrenderers.PackageItemRenderer"
	contentBackgroundAlpha="0" contentBackgroundColor="#FFFFFF">
	<s:layout>
	<s:VerticalLayout gap="0" paddingLeft="0"/> 
	</s:layout> 
	</s:List>-->
	<controls:Label y="10" fontSize="24" fontWeight="bold" horizontalCenter="0"
					text="Select  Package"/>
	<view1:NavigationBar id="bar" label="Select Package" fontSizeS="26" fxLeft="{this.onHome}"
						 leftLabel="Back"/>

	<controls:List id="list" top="70" bottom="160" width="100%" height="100%"
				   itemRenderer="org.syncon.RosettaStone.view.ellips.itemrenderers.PackageSelectItemRenderer"
				   rowHeight="70" styleName="lstStyle"/>

	<ellips:OpenPlugButton id="btnResume" bottom="20" horizontalCenter="0"
						 iconS="assets/buttons/63-runner.png" labelS="Resume"/>
</controls:ScreenView>