<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:popup1="org.syncon.NightStand.view.popup.*"
					  width="100%" height="100%" backgroundAlpha="0.0" creationComplete="onInit()"
					  implements="org.syncon.popups.view.IPopup" xmlns:popup="org.syncon.RosettaStone.view.popup.*" xmlns:mobile="org.syncon.RosettaStone.view.mobile.*">
	
	<fx:Metadata> 
		[Event(name="cancel", type="flash.events.Event")] 		
		[Event(name="setup", type="flash.events.Event")] 
	</fx:Metadata> 	
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			
			import org.syncon.RosettaStone.model.CustomEvent;
			import org.syncon.RosettaStone.vo.LessonResultVO;
			import org.syncon.RosettaStone.vo.LessonVO;
			
			import spark.events.IndexChangeEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			static public const LIST_CHANGED : String = 'listChanged'; 	
			static public const OK : String = 'save'; 	
			static public const CANCEL : String = 'cancel'; 	
			static public const SETUP : String = 'setup'; 	
			
			static public const REPEAT : String = 'REPEAT'; 	
			static public const NEXT_LESSON : String = 'NEXT_LESSON'; 	
			static public const GO_HOME : String = 'GO_HOME'; 	

			public var creationComplete : Boolean = false; 
			public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
			}
			
			public  function create(app:Object)  : IPopup
			{
				var popup :  PopupSelectionResult = new PopupSelectionResult()
				popup.popupCode =  PopupCode.Create( popup ,app ) 
				return popup			
			} 
			
			private var _popupCode :   PopupCode; 
			public function get  popupCode () : PopupCode { return _popupCode  } 
			public function set  popupCode ( _popupCode_ : PopupCode) : void {   _popupCode = _popupCode_  } 
			
			public function show()  : void
			{
				this.popupCode.open( false, true ) ;  
			}
			public function hide( ) : void
			{
				this.popupCode.close() 
			}
			
			
			protected function onSave(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( OK) ) 
			}
			
			protected function onCancel(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( CANCEL ) ) 
			}
			
			
			public var args : Array = [] ; 
			private var fxDone:Function;
			public function done(   fxDone : Function = null ) : void
			{
				//this.popupCode.moveToComponent( goTo, 'tl', false ) ; 
				this.width =  this.parentApplication.width*.8
				this.height =  this.parentApplication.height*.8
				 	this.dispatchEvent( new Event (SETUP   )) 
				this.show()
				this.fxDone = fxDone; 
			}
			
			protected function onRepeat(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( REPEAT ) ) 
			}
			
			protected function onNext(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( NEXT_LESSON ) )  
			}
			
			protected function noHome(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( GO_HOME ) ) 
			}			
						
		]]>
	</fx:Script>
	
	 
<!--	<s:Rect width="100%" height="100%" >
	<s:stroke>
	<s:SolidColorStroke color="0xFFFFFF" alpha="0.3" />
	</s:stroke>
	</s:Rect> -->
	<popup:PopupBg alpha="0.56"/>
	<s:Group width="100%" height="100%" > 
		
		<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" >
			<mobile:TextAreaLabel2  fontSize="24" color="0xFFFFFF" text="Congratulations"/>
			<mobile:TextAreaLabel2  fontSize="24" color="0xFFFFFF" text="Unit Complete"/>
			 <mobile:TextAreaLabel2  fontSize="24" color="0xFFFFFF" id="txtLessonName" text=""/>
			<!--<s:HGroup>
				<mobile:TextAreaLabel2 id="txtCorrect" fontSize="24" />
				<mobile:TextAreaLabel2 text="%"  />
				
			</s:HGroup>-->
			<!--<s:HGroup>
				<mobile:TextAreaLabel2 id="txtCorrect" />
				<s:Label  text="correct" />
			</s:HGroup>-->
			<s:VGroup>
				<s:Button icon="assets/buttons/reload.png" label="Repeat Lesson" click="onRepeat()"  bottom="10" horizontalCenter="0"/>
				<!--<s:Button label="Continue to Next Lesson" click="onNext()"  bottom="10" horizontalCenter="0"/>-->
				<s:Button icon="assets/buttons/home.png"  label="Return to Home Screen" click="noHome()"  bottom="10" horizontalCenter="0"/>
			</s:VGroup>
			
		</s:VGroup>


		
		
	<!--	<s:filters>
			<s:DropShadowFilter alpha="0.9" angle="45.0" blurX="4.0" blurY="4.0" color="#0"
								distance="4.0" hideObject="false" inner="false" knockout="false"
								quality="2" strength="1"/> 
		</s:filters> -->
	</s:Group>
</s:SkinnableContainer>
