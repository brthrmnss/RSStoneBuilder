<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:popup="org.syncon.evernote.basic.view.popup.*"
					 xmlns:popup1="org.syncon.NightStand.view.popup.*"
					 xmlns:view="org.syncon2.utils.mobile.view.*"
					 creationComplete="onInit()" backgroundAlpha="0.0"
					 implements="org.syncon.popups.view.IPopup" xmlns:popup2="org.syncon.RosettaStone.view.popup.*">
	
	<fx:Metadata> 
		[Event(name="cancel", type="flash.events.Event")] 		
		[Event(name="ok", type="flash.events.Event")] 
	</fx:Metadata> 	
	
	<fx:Script>
		<![CDATA[
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			
			
			static public const OK : String = 'save'; 	
			static public const CANCEL : String = 'cancel'; 	
			static public const SETUP : String = 'setup'; 		
			
			public var creationComplete : Boolean = false; 
			public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
				
				var arr : Array = [
					['OK', this.onSave], 
					['Cancel', this.onCancel], 
					/* 		['Help', this.onHelp],
					['Info', this.onInfo] */
				]
				this.bottomMenu.load('', arr )
				
			}
			
			public function create(app:Object) : IPopup
			{
				var popup : PopupTextArea = new PopupTextArea()
				popup._popupCode = PopupCode.Create( popup ,app ) 
				return popup			
			} 
			
			private var _popupCode : PopupCode; 
			public function get popupCode () : PopupCode { return _popupCode } 
			public function set popupCode ( _popupCode_ : PopupCode) : void { _popupCode = _popupCode_ } 
			
			public function show() : void
			{
				this.popupCode.open( false, false ) 
				
				this.txtTagName.setFocus();				
			}
			public function hide( ) : void
			{
				this.popupCode.close() 
			}
			
			
			public function resize(wait:Boolean=true):void
			{
				if ( wait ) 
				{
					this.callLater( this.resize, [false] )
					return
				}
				this.parentApplication.width; 
				this.parentApplication.height; 
				
				this.txtTagName.width = this.width  - 30-30
				//this.height = this.parentApplication.height-40-40
				//this.list.height = this.height - this.header.height - 30 + 30 - 60 + +20 - this.bottomMenu.height; 
				this.width = this.parentApplication.width-40//-40
				this.popupCode.center(); 
				
			}
			
			
			protected function onSave(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( OK) ) 
			}
			
			protected function onCancel(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( CANCEL ) ) 
			}
			
			public var args : Array = [] ; 
			public function editText(title : String, val : String, fxDone : Function, maxChars : int = 0 ) : void
			{
				this.resize(); 
				
				this.txtTagName.text = val; 
				
				this.args = [fxDone ]
				
				 this.txtTagName.maxChars  = maxChars
				this.dispatchEvent( new Event (SETUP )) 
				this.show()
				this.header.label = title; 
			}
			
		]]>
	</fx:Script>
	
	<!--	
	<s:Rect width="100%" height="100%" >
	<s:stroke>
	<s:SolidColorStroke color="0" />
	</s:stroke>
	</s:Rect>-->
	
	
	<popup2:PopupBg/>
	
	<s:VGroup paddingBottom="15" paddingLeft="15" paddingRight="15" paddingTop="15">
		<popup2:PopupHeader id="header" label="Repeat" width="100%" />
		<s:TextInput id="txtTagName" width="100%" contentBackgroundColor="0xFFFFFF"/>
		<!--	<s:HGroup id="hgroup" width="100%" horizontalAlign="center">
		<s:Button label="OK" id="btnSave" click="onSave(event)" />		
		<s:Button label="Cancel" id="btnCancel" click="onCancel(event)" />
		
		</s:HGroup>			
		-->
		<!--<view:BottomBar id="bottomMenu"/>-->
		<popup2:PopupBottomBarBg id="bottomMenu"/>
	</s:VGroup>
	
	
</s:SkinnableContainer>
