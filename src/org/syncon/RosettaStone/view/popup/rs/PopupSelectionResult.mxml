<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
					  xmlns:s="library://ns.adobe.com/flex/spark"
					  xmlns:popup1="org.syncon.NightStand.view.popup.*"
					  width="100%" height="100%" backgroundAlpha="0.0" creationComplete="onInit()"
					  implements="org.syncon.popups.view.IPopup" xmlns:popup="org.syncon.RosettaStone.view.popup.*">
	
	<fx:Metadata> 
		[Event(name="cancel", type="flash.events.Event")] 		
		[Event(name="setup", type="flash.events.Event")] 
	</fx:Metadata> 	
	
	<fx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			
			import org.syncon.RosettaStone.model.CustomEvent;
			
			import spark.events.IndexChangeEvent;
			
			import sss.Shelpers.Shelpers.ui.PopupCode;
			static public const LIST_CHANGED : String = 'listChanged'; 	
			static public const OK : String = 'save'; 	
			static public const CANCEL : String = 'cancel'; 	
			static public const SETUP : String = 'setup'; 				
			public var creationComplete : Boolean = false; 
			public function onInit() : void 
			{
				this.creationComplete = true; 
				this.popupCode.center()
				
				var arr : Array = [
					['OK', this.onSave], 
					['Cancel', this.onCancel], 
					/* 		['Help', this.onHelp],
					['Info', this.onInfo] */
				]
			}
			
			public  function create(app:Object)  : IPopup
			{
				var popup :  PopupSelectionResult = new PopupSelectionResult()
				popup.popupCode =  PopupCode.Create( popup ,app ) 
				return popup			
			} 
			
			private var _popupCode :   PopupCode; 
			public function get  popupCode () : PopupCode { return _popupCode  } 
			public function set  popupCode ( _popupCode_ : PopupCode) : void {   _popupCode = _popupCode_  } 
			
			public function show()  : void
			{
				this.popupCode.open( false,false ) 
			}
			public function hide( ) : void
			{
				this.popupCode.close() 
			}
			
			
			protected function onSave(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( OK) ) 
			}
			
			protected function onCancel(event:MouseEvent=null):void
			{
				this.dispatchEvent( new Event( CANCEL ) ) 
			}
			
			public function updateLocation( currentLister_doNotReset : Object = null )  : void
			{
				/*
				//dont' move to me if i'm not the current one? 
				if ( currentLister_doNotReset != null && this.onenote_list != currentLister_doNotReset ) 
				return 
				this.popupCode.moveToComponent(  this.partial.leftEdgeUI, 'tl',  this.tween, false, true, -this.width-5 ) 
				*/
			}
			
			public var args : Array = [] ; 
			public function selectFromList( goTo : UIComponent, right : Boolean,  fxDone : Function=null  ) : void
			{
		  	
				this.popupCode.moveToComponent( goTo, 'tl', false ) ; 
				this.height = goTo.height; 
				this.width = goTo.width; 
				//	this.dispatchEvent( new Event (SETUP   )) 
						this.show()
							
				this.imgRight.visible = right; 
				this.imgWrong.visible = ! right 
			}
 
	 
			
		]]>
	</fx:Script>
	
	 
	<s:Rect width="100%" height="100%" >
	<s:stroke>
	<s:SolidColorStroke color="0xFFFFFF" alpha="0.3" />
	</s:stroke>
	</s:Rect> 
	
	<s:Group width="100%" height="100%" > 
		
	
 <s:Image id="imgRight" source="assets/buttons/Check-64.png"  verticalCenter="0" horizontalCenter="0"/>
	<s:Image id="imgWrong" source="assets/buttons/Gnome-Window-Close-64.png"  verticalCenter="0" horizontalCenter="0"/>
	
		
		
		<s:filters>
			<s:DropShadowFilter alpha="0.9" angle="45.0" blurX="4.0" blurY="4.0" color="#0"
								distance="4.0" hideObject="false" inner="false" knockout="false"
								quality="2" strength="1"/> 
		</s:filters> 
	</s:Group>
</s:SkinnableContainer>
